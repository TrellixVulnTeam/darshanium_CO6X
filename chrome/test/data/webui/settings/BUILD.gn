# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//chrome/browser/resources/settings/settings.gni")
import("//third_party/closure_compiler/compile_js.gni")
import("//ui/webui/resources/tools/js_modulizer.gni")
import("../namespace_rewrites.gni")

js_modulizer("modulize") {
  input_files = [
    "fake_input_method_private.js",
    "fake_language_settings_private.js",
    "fake_settings_private.js",
    "prefs_test_cases.js",
    "prefs_tests.js",
    "pref_util_tests.js",
    "settings_slider_tests.js",
    "settings_textarea_tests.js",
    "settings_toggle_button_tests.js",
    "sync_test_util.js",
    "test_languages_browser_proxy.js",
    "test_lifetime_browser_proxy.js",
    "test_profile_info_browser_proxy.js",
    "test_search_engines_browser_proxy.js",
    "test_sync_browser_proxy.js",
  ]

  namespace_rewrites = settings_namespace_rewrites + test_namespace_rewrites + [
                         "export_passwords_tests.run|run",
                         "settings.buildRouterForTesting|buildRouter",
                         "settings.defaultSettingLabel|defaultSettingLabel",
                         "settings.FakeLanguageSettingsPrivate|FakeLanguageSettingsPrivate",
                         "settings.FakeInputMethodPrivate|FakeInputMethodPrivate",
                         "settings.FakeSettingsPrivate|FakeSettingsPrivate",
                         "settings.getFakeLanguagePrefs|getFakeLanguagePrefs",
                         "settings.kMenuCloseDelay|kMenuCloseDelay",
                         "settings.setLanguageSettingsPrivateApiForTest|setLanguageSettingsPrivateApiForTest",
                         "settings.setPageVisibilityForTesting|setPageVisibilityForTesting",
                         "settings.setSearchManagerForTesting|setSearchManagerForTesting",
                         "settings.TestLanguagesBrowserProxy|TestLanguagesBrowserProxy",
                         "settings.TestLifetimeBrowserProxy|TestLifetimeBrowserProxy",
                         "settings_page_test_util.getPage|getPage",
                         "settings_page_test_util.getSection|getSection",
                         "settings_search.createSampleSearchEngine|createSampleSearchEngine",
                         "settings_search.TestSearchEnginesBrowserProxy|TestSearchEnginesBrowserProxy",
                         "sync_test_util.getSyncAllPrefs|getSyncAllPrefs",
                         "sync_test_util.setupRouterWithSyncRoutes|setupRouterWithSyncRoutes",
                         "sync_test_util.simulateSyncStatus|simulateSyncStatus",
                         "sync_test_util.simulateStoredAccounts|simulateStoredAccounts",
                       ]
}

js_type_check("closure_compile") {
  is_polymer3 = true
  closure_flags = settings_closure_flags + [
                    "browser_resolver_prefix_replacements=\"chrome://settings/=../../chrome/browser/resources/settings/\"",
                    "js_module_root=../../chrome/test/data/webui/",
                    "js_module_root=./gen/chrome/test/data/webui/",
                  ]
  deps = [
    ":about_page_tests",
    ":advanced_page_test",
    ":search_page_test",
    ":settings_page_test_util",
    ":test_about_page_browser_proxy",
    ":test_lifetime_browser_proxy.m",
    ":test_local_data_browser_proxy",
    ":test_search_engines_browser_proxy.m",
    ":test_site_settings_prefs_browser_proxy",
    ":test_util",

    # TODO(crbug.com/1000989): Add targets for more files here.
  ]
}

js_library("test_local_data_browser_proxy") {
  deps = [
    "..:test_browser_proxy.m",
    "//chrome/browser/resources/settings:lazy_load",
  ]
}

js_library("test_site_settings_prefs_browser_proxy") {
  deps = [
    ":test_util",
    "..:test_browser_proxy.m",
    "//chrome/browser/resources/settings:lazy_load",
  ]
}

js_library("test_util") {
  deps = [
    "//chrome/browser/resources/settings:lazy_load",
    "//chrome/browser/resources/settings:settings",
  ]
}

js_library("about_page_tests") {
  deps = [
    ":test_about_page_browser_proxy",
    ":test_lifetime_browser_proxy.m",
    "..:chai_assert",
    "//chrome/browser/resources/settings:settings",
  ]
  externs_list = [ "$externs_path/mocha-2.5.js" ]
}

js_library("advanced_page_test") {
  deps = [
    ":settings_page_test_util",
    "..:chai_assert",
    "//chrome/browser/resources/settings:settings",
    "//ui/webui/resources/js:load_time_data.m",
  ]
  externs_list = [ "$externs_path/mocha-2.5.js" ]
}

js_library("settings_page_test_util") {
  deps = [ "..:chai_assert" ]
}

js_library("test_about_page_browser_proxy") {
  deps = [
    "..:test_browser_proxy.m",
    "//chrome/browser/resources/settings:settings",
    "//ui/webui/resources/js:cr.m",
  ]
  extra_deps = [ ":modulize" ]
}

js_library("test_lifetime_browser_proxy.m") {
  sources = [ "$root_gen_dir/chrome/test/data/webui/settings/test_lifetime_browser_proxy.m.js" ]
  deps = [
    "..:test_browser_proxy.m",
    "//chrome/browser/resources/settings:settings",
  ]
  extra_deps = [ ":modulize" ]
}

js_library("test_search_engines_browser_proxy.m") {
  sources = [ "$root_gen_dir/chrome/test/data/webui/settings/test_search_engines_browser_proxy.m.js" ]
  deps = [
    "..:test_browser_proxy.m",
    "//chrome/browser/resources/settings:settings",
  ]
  extra_deps = [ ":modulize" ]
}

js_library("search_page_test") {
  deps = [
    ":test_search_engines_browser_proxy.m",
    "..:chai_assert",
    "//chrome/browser/resources/settings:settings",
  ]
  externs_list = [ "$externs_path/mocha-2.5.js" ]
}
